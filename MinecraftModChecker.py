import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import requests

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç @BotFather
BOT_TOKEN = "8364754669:AAGa_SoRZ3zd0KCuS-q2ALUppSu0owcxBUk"

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–¥–æ–≤ Minecraft. '
        '–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Iron Chests"), '
        '–∏ —è –Ω–∞–π–¥—É, –Ω–∞ –∫–∞–∫–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –∏–≥—Ä—ã –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω.'
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–∞!')

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–¥–∞
async def search_mod(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_query = update.message.text
    logging.info(f"User {update.effective_user.username} searched for: {user_query}")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    await update.message.chat.send_action(action="typing")

    try:
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ Modrinth API
        api_url = f"https://api.modrinth.com/v2/search?query={user_query}&limit=5"
        response = requests.get(api_url)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ –æ—à–∏–±–∫–∞ HTTP
        data = response.json()

        hits = data['hits']

        if not hits:
            await update.message.reply_text("üòï –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ.")
            return

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for mod in hits:
            mod_title = mod['title']
            mod_slug = mod['slug']
            mod_versions = mod['versions']

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤–µ—Ä—Å–∏–π (–±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏)
            if mod_versions:
                # –í–µ—Ä—Å–∏–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: ['1.19.2', '1.19.1', ...]
                # –û–±—Ä–µ–∑–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –≤–µ—Ä—Å–∏–π
                recent_versions = mod_versions[:10]
                versions_str = ", ".join(recent_versions)
                if len(mod_versions) > 10:
                    versions_str += f" ... (–∏ –µ—â–µ {len(mod_versions) - 10})"
            else:
                versions_str = "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏—è—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = (
                f"üîç <b>{mod_title}</b>\n"
                f"üåê <b>–í–µ—Ä—Å–∏–∏:</b> {versions_str}\n"
                f"üîó <a href='https://modrinth.com/mod/{mod_slug}'>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ Modrinth</a>\n"
                f"----------------------------------------\n"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await update.message.reply_text(message, parse_mode='HTML', disable_web_page_preview=True)

    except requests.exceptions.RequestException as e:
        logging.error(f"API Error: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    except Exception as e:
        logging.error(f"Unexpected Error: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    # –°–æ–∑–¥–∞–µ–º Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, search_mod))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
